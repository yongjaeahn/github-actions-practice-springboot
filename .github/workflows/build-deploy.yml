name: CI/CD Pipeline
on:
  #push:
  #  branches:
  #    - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 소스 코드 체크아웃
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Spring Boot Application
        run: |
          chmod +x ./gradlew
          ./gradlew bootJar # .jar 파일 생성 - 테스트나 다른 빌드 단계를 생략하고 애플리케이션 배포/Spring Boot 애플리케이션의 실행 가능한 JAR 파일만 필요할 때

      - name: SSH 키 파일 생성
        run: |
          mkdir -p ~/.ssh # .ssh 디렉토리 생성
          #echo "$SSH_KEY" | tr -d '\r' > ~/.ssh/id_rsa # SSH 키
          echo "$SSH_KEY" > ~/.ssh/id_rsa # SSH 키
          chmod 600 ~/.ssh/id_rsa # 적절한 권한 설정
        env:
          SSH_KEY: ${{ secrets.EC2_PRIVATE_KEY }}

      - name: EC2에 파일 배포 및 실행
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USERNAME }}
        run: |
          scp -i ~/.ssh/id_rsa -o "StrictHostKeyChecking=no" build/libs/*SNAPSHOT.jar $EC2_USER@$EC2_HOST:/home/ubuntu/app.jar
          ssh -i ~/.ssh/id_rsa -o "StrictHostKeyChecking=no" $EC2_USER@$EC2_HOST "
            cp /home/ubuntu/app.jar /home/ubuntu/app.jar.bak
            nohup java -jar /home/ubuntu/app.jar > .output.log 2>&1 &
          "